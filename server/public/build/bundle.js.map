{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/stats/TotalOrders.svelte","../../src/components/stats/TotalCustomers.svelte","../../src/components/Header/AppBar.svelte","../../src/components/stats/TableOrders.svelte","../../src/components/stats/Table.svelte","../../src/components/CustomerOrders.svelte","../../src/components/popUp/AddUser.svelte","../../src/components/popUp/AddOrder.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if (typeof $$scope.dirty === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.19.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_store, xlink_attr };\n","<script>\n    import {onMount} from \"svelte\";\n    let total = 0;\n    onMount(()=>{\n        download();\n    });\n    async function download() {\n        const response = await fetch(\"/api/v1/total/orders/Year\");\n        const results = await response.json();\n        if(results){\n            console.log(results);\n            total = results['total']\n        }\n    }\n    export function refresh(){\n        download();\n    }\n\n</script>\n<div class=\"more-info-box bg-cyan fg-white\">\n            <div class=\"content\">\n                <h2 class=\"text-bold mb-0\">{total}</h2>\n                <div>Total Orders By Year</div>\n            </div>\n            <div class=\"icon\">\n                <span class=\"mif-cart\"></span>\n            </div>\n            <a href=\"#Hello\" class=\"more\"> More info <span class=\"mif-arrow-right\"></span></a>\n</div>","<script>\n    //This Component handles all the total customers \n    //Display Quick Stats..\n    import {onMount} from \"svelte\";\n\n    let total = 0;\n    onMount( ()=>{\n        download();\n        \n    });\n\n    async function download(){\n        const response = await fetch(\"/api/v1/total/customers\")\n        const results = await response.json();\n        if(results){\n            total = results['total'];\n        }\n    }\n\n    export function refresh(){\n        download();\n    }\n\n</script>\n<div class=\"more-info-box bg-green fg-white\">\n            <div class=\"content\">\n                <h2 class=\"text-bold mb-0\">{total}</h2>\n                <div>Total Customers</div>\n            </div>\n            <div class=\"icon\">\n               <span class=\"mif-user-check\"></span>\n            </div>\n            <a href=\"#test\" class=\"more\"> More info <span class=\"mif-arrow-right\"></span></a>\n</div>"," <script>\n    import {createEventDispatcher} from \"svelte\";\n\n    const dispatch = createEventDispatcher();\n\n </script>\n <div  class=\"pos-absolute bg-darkCyan fg-white app-bar\" >\n            <button type=\"button\" class=\"hamburger menu-down hidden\" style=\"display: none;\">\n            <span class=\"line\"></span><span class=\"line\"></span>\n            <span class=\"line\"></span>\n            </button>\n\n            <a href=\"#test\" class=\"app-bar-item d-block d-none-lg\" id=\"paneToggle\"><span class=\"mif-menu\"></span></a>\n\n            <div class=\"app-bar-container ml-auto\">\n                <a href=\"#test\" class=\"app-bar-item\">\n                    <button on:click|preventDefault=\"{()=>{dispatch(\"adduser\", true)}}\" class=\"button primary\">\n                    \n                    <span class=\"mif-user-plus\"></span>\n                    \n                    </button>\n                </a>\n                <a href=\"#test\" class=\"app-bar-item\">\n                    <button on:click|preventDefault=\"{()=>{dispatch(\"addorder\", true)}}\" class=\"button primary\">\n                        <span class=\"mif-cart\"></span>\n                    </button>\n                </a>\n\n                <div class=\"app-bar-container\">\n                    <a href=\"#t\" class=\"app-bar-item\">\n                        <img alt=\"hello\" src=\"https://metroui.org.ua/themes/pandora/images/jek_vorobey.jpg\" class=\"avatar\">\n                        <span class=\"ml-2 app-bar-name\">Jack Sparrow</span>\n                    </a>\n                    <div class=\"user-block shadow-1\" data-role=\"collapse\" data-collapsed=\"true\" data-role-collapse=\"true\" style=\"display: none;\">\n                        <div class=\"bg-darkCyan fg-white p-2 text-center\">\n                            <img alt=\"\" src=\"https://metroui.org.ua/themes/pandora/images/jek_vorobey.jpg\" class=\"avatar\">\n                            <div class=\"h4 mb-0\">Jack Sparrow</div>\n                            <div>Pirate captain</div>\n                        </div>\n                    </div>\n                </div>\n                <a href=\"#test\" class=\"app-bar-item\">\n                    <span class=\"mif-cogs\"></span>\n                </a>\n            </div>\n        </div>","<script>\n    import {createEventDispatcher} from \"svelte\";\n    export let orders = [];\n    const dispatch = createEventDispatcher();\n    \n    function removeOrder(index) {\n        \n       // console.log(orders[index]);\n\n        var form = new FormData();\n        form.append(\"orderid\", orders[index]['orderid']);\n        \n        fetch(\"/api/v1/delete/order\", {\n            method: 'post',\n            body: form,\n        }).then(()=>{\n            dispatch(\"refresh\");\n        });\n       \n    }\n</script>\n<table class=\"table compact\"  style=\"padding-left:100px;\" cellspacing=\"0\" cellpadding=\"5\" border=\"0\">\n    <thead>\n        <tr>\n            <th>#</th>\n            <th>Order Name</th>\n            <th>Order Total</th>\n            <th>Order Date</th>\n            <th></th>\n        </tr>\n    </thead>\n    <tbody>\n        {#each orders as {order_name, order_total, order_date}, i}\n             <tr >\n                <td>{(i + 1)}</td>\n                <td>{order_name}</td>\n                <td>{order_total}</td>\n                <td>{order_date}</td>\n                <td><button on:click=\"{()=>{removeOrder(i)}}\">Delete</button></td>\n            </tr>\n        {/each}\n        \n    </tbody>\n</table>","<script>\n    import {onMount, createEventDispatcher} from \"svelte\";\n    import TableOrders from \"./TableOrders.svelte\";\n    let customers = [];\n\n    const dispatch = createEventDispatcher();\n    onMount(()=>{\n        download();\n    })\n    async function download() {\n        const response = await fetch(\"/api/v1/customers/orders\");\n        const results = await response.json();\n        if(results){\n           \n            customers = results;\n            dispatch(\"results\", results);\n        }\n    }\n    export function refresh(){\n        download();\n    }\n\n    export function setCustomers(records) {\n        customers = records;\n    }\n\n \n</script>\n<table class=\"table compact\">\n    <thead>\n    <tr>\n        <th>#</th>\n        <th>First Name</th>\n        <th>Last Name</th>\n        <th>Date Of Birth</th>\n        <th>Address</th>\n        <th>E-Mail</th>\n        <th>Date Registered</th>\n        <th></th>\n    </tr>\n    </thead>\n    <tbody>\n        {#each customers as {user}, i}\n             <tr>\n                <td>{(i + 1)}</td>\n                <td>{user['first_name']}</td>\n                <td>{user['last_name']}</td>\n                <td>{user['dob']}</td>\n                <td>{user['address']}</td>\n                <td>{user['email']}</td>\n                <td>{user['date_registered']}</td>\n                <td>\n                    <button on:click=\"{()=>{user['orderview'] = (user['orderview'] == 0) ? 1 : 0;}}\" class=\"button\">View Orders</button>\n                    <button>Edit User</button>\n                </td>\n                \n             </tr>\n            {#if user['orderview'] == 1}\n              <tr>\n                <td>\n                    <TableOrders on:refresh orders={user['orders']} />\n                </td> \n              </tr>\n            {/if}\n        {/each}\n    </tbody>\n</table>","<script>\n    import Table from \"./stats/Table.svelte\";\n    export let title = \"TEST\";\n    let table;\n    let results;\n    export function refresh(){\n        table.refresh();\n    }\n\n    function handleResults(e) {\n        results = e.detail;\n    }\n    function handleKeyDown(e) {\n        console.log(e);\n        //On Enter Search the information...\n        //Get the html element so we can get the value...\n        var input = e.target || e.srcElement;\n        if(e.keyCode == 13){\n            \n            var value = input.value.toLowerCase();\n            const nwresults = results.filter(customer => customer['user']['first_name'].toLowerCase().includes(value) \n            || customer['user']['last_name'].toLowerCase().includes(value) );\n\n            table.setCustomers(nwresults);\n            \n        }else if(e.keyCode == 8 || input.value.length == 0){\n            table.refresh();\n        }\n    }\n</script>\n<div class=\"panel mt4\" >\n        <div class=\"panel-content\" >\n            <Table on:refresh on:results={handleResults} bind:this={table} /> \n        </div>\n        <div class=\"panel-title\">\n            \n            <span class=\"caption\">{title}\n                <div style=\"position: absolute;top: 2px;width: 70%;left: 188px;\" class=\"input\">\n                    <input on:keydown={handleKeyDown} placeholder=\"Search Customers\" type=\"text\" />\n                </div>\n            </span>\n            <span class=\"mif-apps icon\"></span>\n            <span class=\"dropdown-toggle marker-center active-toggle\"></span>\n            \n        </div>\n</div>","<script>\n    import {createEventDispatcher} from \"svelte\";\n    const dispatch = createEventDispatcher();\n    let fname;\n    let mname;\n    let lname;\n    let em;\n    let dob;\n    let address;\n\n    function handleSubmit() {\n        var form = new FormData();\n        form.append(\"fname\", fname);\n        form.append(\"mname\", mname);\n        form.append(\"lname\", lname);\n        form.append(\"email\", em);\n        form.append(\"dob\", dob);\n        form.append(\"address\", address);\n        console.log(form);\n        console.log(em);\n        fetch(\"/api/v1/add/customer\", {\n            method: 'post',\n            body: form,\n        }).then(()=>{\n            dispatch(\"refresh\");\n        });\n\n    }\n\n\n</script>\n<style>\n    .window{\n        position: absolute;\n        width: 600px;\n        height: 640px;\n        top: 50%;\n        left: 50%;\n        margin-left: -300px;\n        margin-top: -320px;\n    }\n    .window-content {\n        overflow: auto;\n    }\n\n</style>\n<div class=\"window\">\n    <div class=\"window-caption\">\n        <span class=\"icon mif-user-plus\"></span>\n        <span class=\"title\">Add Customer</span>\n        <div class=\"buttons\">\n          \n            <span on:click=\"{()=>{dispatch(\"close\", false)}}\" class=\"btn-close\"></span>\n        </div>\n    </div>\n    <div class=\"window-content p-2\">\n        <form>\n            <div class=\"form-group\">\n                <label>First Name</label>\n                <input bind:value={fname} type=\"text\" placeholder=\"Enter First Name\"/>\n                \n            </div>\n            <div class=\"form-group\">\n                <label>Middle Name</label>\n                <input bind:value={mname} type=\"text\" placeholder=\"Enter Middle Name\"/>\n                \n            </div>\n            <div class=\"form-group\">\n                <label>Last Name</label>\n                <input bind:value={lname} type=\"text\" placeholder=\"Enter Last Name\"/>\n                \n            </div>\n\n            <div class=\"form-group\">\n                <label>Date Of Birth</label>\n                <div class=\"input calendar-picker\">\n                      <input bind:value={dob} type=\"date\" placeholder=\"Enter DOB\"/>\n                </div>\n              \n            </div>\n            <div class=\"form-group\">\n               <label>E-mail</label>\n               <input bind:value={em} type=\"email\" placeholder=\"Enter Email\"/>\n            </div>\n            <div class=\"form-group\">\n                <label>Address</label>\n                <textarea bind:value={address}  style=\"height: 64px;\" ></textarea>\n            </div>\n           \n            <div class=\"form-group\">\n                <button on:click|preventDefault={handleSubmit} class=\"button success\">Submit data</button>\n                <input on:click=\"{()=>{dispatch(\"close\", false)}}\" type=\"button\" class=\"button\" value=\"Cancel\">\n            </div>\n        </form>\n    </div>\n</div>\n","<script>\n    import {onMount, createEventDispatcher} from \"svelte\";\n    const dispatch = createEventDispatcher();\n    \n    let ordername;\n    let orderdate = new Date();\n    let ordertotal;\n    let cus_id;\n    let customers = [];\n    let keeptrack = [];\n    onMount(async() => {\n        var response = await fetch(\"/api/v1/customers\");\n        var results = await response.json();\n        if(results) {\n            customers = results;\n        }\n    });\n    function handleSubmit() {\n        var form = new FormData();\n        form.append(\"orders\", JSON.stringify(keeptrack));\n        \n        fetch(\"/api/v1/add/orders\", {\n            method: 'post',\n            body: form,\n        }).then(()=>{\n            dispatch(\"refresh\");\n        });\n\n    }\n\n    function addOrders(){\n        \n        keeptrack = [...keeptrack, {\"customerid\" : cus_id,\"orderdate\": formatDate(orderdate), \"ordername\" : ordername, \"ordertotal\" : ordertotal}];\n        ordername = \"\";\n        ordertotal = 0;\n       \n    }\n\n    function formatDate(date){\n        if(date instanceof Date) {\n            var year = date.getFullYear();\n            var month = (date.getMonth() + 1 < 10) ? `0${date.getMonth() + 1}` : date.getMonth();\n            var day = (date.getDate() < 10) ? `0${date.getDate()}` : date.getDate();\n            return `${year}-${month}-${day}`;\n        }\n        return date;\n    }\n\n    function changeTab(){\n        var docid = this.hash.replace(\"#\", \"\");\n        var element = document.getElementById(docid);\n        var li = document.getElementById(`${docid}li`);\n\n        var actives = document.querySelectorAll(\".active\");\n        actives.forEach(ele => {\n            if(ele.tagName == \"DIV\"){\n                ele.style.display = \"none\";\n            }\n            ele.classList.remove(\"active\"); \n        });\n        li.classList.add(\"active\");\n        element.style.display = \"\";\n        element.classList.add(\"active\");\n    }\n    function removeOrder(index) {\n        keeptrack.splice(index, 1);\n        keeptrack = keeptrack;\n    }\n\n\n</script>\n<style>\n    .window{\n        position: absolute;\n        width: 600px;\n        height: 640px;\n        top: 50%;\n        left: 50%;\n        margin-left: -300px;\n        margin-top: -320px;\n    }\n    .window-content {\n        overflow: auto;\n    }\n\n\n\n</style>\n<div class=\"window\">\n    <div class=\"window-caption\">\n        <span class=\"icon mif-cart\"></span>\n        <span class=\"title\">Add Order</span>\n        <div class=\"buttons\">\n            <span on:click=\"{()=>{dispatch(\"close\", false)}}\" class=\"btn-close\"></span>\n        </div>\n    </div>\n    <div class=\"window-content p-2\">\n        <button on:click={handleSubmit} class=\"button w-100 primary\">Submit Data</button>\n        <div class=\"tabs tabs-wrapper top tabs-expand\" >\n            <ul class=\"tabs-list\">\n                <li id=\"addli\" class=\"active\">\n                    <a on:click|preventDefault={changeTab} href=\"#add\">Home</a></li>\n                <li id=\"ordersli\">\n                    <a on:click|preventDefault={changeTab} href=\"#orders\">Orders</a></li>\n            </ul>\n        </div>\n        \n    <div class=\"border bd-default no-border-top p-2\">\n        <div id=\"add\" class=\"active\">\n            <form>\n                    <select bind:value={cus_id}>\n                            <option value=\"-1\">Select Customer</option>\n                        {#each customers as {customerid, first_name, last_name}, i}\n                            <option value={customerid}>{`${first_name} ${last_name}`}</option>\n                        {/each}\n                    </select>\n                    <br/>\n                    <h2>Add Orders</h2>\n                    <div class=\"form-group\">\n                        <label>Order Name</label>\n                        <input bind:value={ordername} type=\"text\" placeholder=\"Enter First Name\"/>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Order Total</label>\n                        <input bind:value={ordertotal} type=\"text\" placeholder=\"Enter Middle Name\"/>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Order Date: {formatDate(orderdate)}</label>\n                        \n                    </div>\n\n\n                    \n                    <div class=\"form-group\">\n                        <button on:click|preventDefault={addOrders} class=\"button success\">Add Order</button>\n                        <input on:click=\"{()=>{dispatch(\"close\", false)}}\" type=\"button\" class=\"button\" value=\"Cancel\">\n                    </div>\n            </form>\n        </div>\n        <div style=\"display: none;\" id=\"orders\">\n           \n            <table class=\"table compact\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Order Name</th>\n                        <th>Order Total</th>\n                        <th>Order Date</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody> \n                    {#each keeptrack as {orderdate, ordername, ordertotal}, i}\n                         <tr>\n                            <td>{(i + 1)}</td>\n                            <td>{ordername}</td>\n                            <td>{ordertotal}</td>\n                            <td>{orderdate}</td>\n                            <td><button on:click=\"{()=>{removeOrder(i)}}\" class=\"button alert\">DELETE</button></td>\n                         </tr>\n                    {/each}\n                \n                </tbody>\n            </table>\n        </div>\n    </div>\n\n\n        \n    </div>\n</div>\n","<script>\n  //Main COMPONENT...\n  //LOAD THE QUICK STATS...\n  import TotalOrders from \"./components/stats/TotalOrders.svelte\";\n  import TotalCustomers from \"./components/stats/TotalCustomers.svelte\";\n  import AppBar from \"./components/Header/AppBar.svelte\";\n  import CustomerOrders from \"./components/CustomerOrders.svelte\";\n  import AddUser from \"./components/popUp/AddUser.svelte\";\n  import AddOrders from \"./components/popUp/AddOrder.svelte\";\n\n  let title = \"Starbucks Store\";\n  let displayCustomer = false;\n  let displayOrder = false;\n  let customer;\n  let totalOrders;\n  let totalCustomers;\n\n  function handleRefresh() {\n      displayCustomer = false;\n      customer.refresh();\n      totalOrders.refresh();\n      totalCustomers.refresh();\n\n  }\n\n</script>\n<div data-role=\"navview\" data-toggle=\"#paneToggle\" data-expanded=\"xl\" data-compact=\"lg\" data-active-state=\"true\" class=\"navview compact-lg expanded-xl\" data-role-navview=\"true\">\n    <div class=\"navview-pane\">\n        <div class=\"bg-cyan d-flex flex-align-center\">\n            <button class=\"pull-button m-0 bg-darkCyan-hover\">\n                <span class=\"mif-menu fg-white\"></span>\n            </button>\n            <h2 class=\"text-light m-0 fg-white pl-7\" style=\"line-height: 52px\">{title}</h2>\n        </div>\n\n        <div class=\"suggest-box\">\n            <div class=\"data-box\">\n                <img alt=\"ICON\" src=\"https://metroui.org.ua/themes/pandora/images/jek_vorobey.jpg\" class=\"avatar\">\n                <div class=\"ml-4 avatar-title flex-column\">\n                    <a href=\"#quite\" class=\"d-block fg-white text-medium no-decor\"><span class=\"reduce-1\">Jack Sparrow</span></a>\n                    <p class=\"m-0\"><span class=\"fg-green mr-2\">●</span><span class=\"text-small\">online</span></p>\n                </div>\n            </div>\n            <img alt=\"ICON\" src=\"https://metroui.org.ua/themes/pandora/images/jek_vorobey.jpg\" class=\"avatar holder ml-2\">\n        </div>\n\n        <ul class=\"navview-menu mt-4\" id=\"side-menu\" style=\"height: calc(100% - 225px);\">\n            <li class=\"item-header\">MAIN NAVIGATION</li>\n            <li class=\"active\">\n                <a href=\"#dashboard\">\n                    <span class=\"icon\"><span class=\"mif-meter\"></span></span>\n                    <span class=\"caption\">Dashboard</span>\n                </a>\n            </li>\n            <li>\n                <a href=\"#widgets\">\n                    <span class=\"icon\"><span class=\"mif-widgets\"></span></span>\n                    <span class=\"caption\">Widgets</span>\n                </a>\n            </li>\n            <li>\n                <a href=\"#\" class=\"dropdown-toggle\">\n                    <span class=\"icon\"><span class=\"mif-versions\"></span></span>\n                    <span class=\"caption\">Sample Pages</span>\n                </a>\n                <ul class=\"navview-menu stay-open\" data-role=\"dropdown\" data-role-dropdown=\"true\" style=\"display: none;\">\n                    <li class=\"item-header\">Pages</li>\n                    <li><a href=\"login.html\">\n                        <span class=\"icon\"><span class=\"mif-lock\"></span></span>\n                        <span class=\"caption\">Login</span>\n                    </a></li>\n                    <li><a href=\"register.html\">\n                        <span class=\"icon\"><span class=\"mif-user-plus\"></span></span>\n                        <span class=\"caption\">Register</span>\n                    </a></li>\n                    <li><a href=\"lockscreen.html\">\n                        <span class=\"icon\"><span class=\"mif-key\"></span></span>\n                        <span class=\"caption\">Lock screen</span>\n                    </a></li>\n                    <li><a href=\"#profile\">\n                        <span class=\"icon\"><span class=\"mif-profile\"></span></span>\n                        <span class=\"caption\">Profile</span>\n                    </a></li>\n                    <li><a href=\"preloader.html\">\n                        <span class=\"icon\"><span class=\"mif-spinner\"></span></span>\n                        <span class=\"caption\">Preloader</span>\n                    </a></li>\n                    <li><a href=\"404.html\">\n                        <span class=\"icon\"><span class=\"mif-cancel\"></span></span>\n                        <span class=\"caption\">404 Page</span>\n                    </a></li>\n                    <li><a href=\"500.html\">\n                        <span class=\"icon\"><span class=\"mif-warning\"></span></span>\n                        <span class=\"caption\">500 Page</span>\n                    </a></li>\n                    <li><a href=\"#product-list\">\n                        <span class=\"icon\"><span class=\"mif-featured-play-list\"></span></span>\n                        <span class=\"caption\">Product list</span>\n                    </a></li>\n                    <li><a href=\"#product\">\n                        <span class=\"icon\"><span class=\"mif-rocket\"></span></span>\n                        <span class=\"caption\">Product page</span>\n                    </a></li>\n                    <li><a href=\"#invoice\">\n                        <span class=\"icon\"><span class=\"mif-open-book\"></span></span>\n                        <span class=\"caption\">Invoice</span>\n                    </a></li>\n                    <li><a href=\"#orders\">\n                        <span class=\"icon\"><span class=\"mif-table\"></span></span>\n                        <span class=\"caption\">Orders</span>\n                    </a></li>\n                    <li><a href=\"#order-details\">\n                        <span class=\"icon\"><span class=\"mif-library\"></span></span>\n                        <span class=\"caption\">Order details</span>\n                    </a></li>\n                    <li><a href=\"#price-table\">\n                        <span class=\"icon\"><span class=\"mif-table\"></span></span>\n                        <span class=\"caption\">Price table</span>\n                    </a></li>\n                    <li><a href=\"maintenance.html\">\n                        <span class=\"icon\"><span class=\"mif-cogs\"></span></span>\n                        <span class=\"caption\">Maintenance</span>\n                    </a></li>\n                    <li><a href=\"coming-soon.html\">\n                        <span class=\"icon\"><span class=\"mif-watch\"></span></span>\n                        <span class=\"caption\">Coming soon</span>\n                    </a></li>\n                    <li>\n                        <a href=\"help-center.html\">\n                            <span class=\"icon\"><span class=\"mif-help\"></span></span>\n                            <span class=\"caption\">Help center</span>\n                        </a>\n                    </li>\n                </ul>\n            </li>\n            <li>\n                <a href=\"#\" class=\"dropdown-toggle\">\n                    <span class=\"icon\"><span class=\"mif-devices\"></span></span>\n                    <span class=\"caption\">Forms</span>\n                </a>\n                <ul class=\"navview-menu stay-open\" data-role=\"dropdown\" data-role-dropdown=\"true\" style=\"display: none;\">\n                    <li class=\"item-header\">Forms</li>\n                    <li><a href=\"#forms-basic\">\n                        <span class=\"icon\"><span class=\"mif-spinner2\"></span></span>\n                        <span class=\"caption\">Basic elements</span>\n                    </a></li>\n                    <li><a href=\"#forms-extended\">\n                        <span class=\"icon\"><span class=\"mif-spinner2\"></span></span>\n                        <span class=\"caption\">Extended elements</span>\n                    </a></li>\n                    <li><a href=\"#forms-layouts\">\n                        <span class=\"icon\"><span class=\"mif-spinner2\"></span></span>\n                        <span class=\"caption\">Layouts</span>\n                    </a></li>\n                    <li><a href=\"#forms-validating\">\n                        <span class=\"icon\"><span class=\"mif-spinner2\"></span></span>\n                        <span class=\"caption\">Validating</span>\n                    </a></li>\n                </ul>\n            </li>\n\n            <li>\n                <a href=\"#\" class=\"dropdown-toggle\">\n                    <span class=\"icon\"><span class=\"mif-table\"></span></span>\n                    <span class=\"caption\">Tables</span>\n                </a>\n                <ul class=\"navview-menu stay-open\" data-role=\"dropdown\" data-role-dropdown=\"true\" style=\"display: none;\">\n                    <li class=\"item-header\">Tables</li>\n                    <li><a href=\"#table-classes\">\n                        <span class=\"icon\"><span class=\"mif-spinner2\"></span></span>\n                        <span class=\"caption\">Table classes</span>\n                    </a></li>\n                    <li><a href=\"#table-component\">\n                        <span class=\"icon\"><span class=\"mif-spinner2\"></span></span>\n                        <span class=\"caption\">Table component</span>\n                    </a></li>\n                </ul>\n            </li>\n\n            <li>\n                <a href=\"#\" class=\"dropdown-toggle\">\n                    <span class=\"icon\"><span class=\"mif-air\"></span></span>\n                    <span class=\"caption\">UI Elements</span>\n                </a>\n                <ul class=\"navview-menu stay-open\" data-role=\"dropdown\" data-role-dropdown=\"true\" style=\"display: none;\">\n                    <li class=\"item-header\">UI Elements</li>\n                    <li>\n                        <a href=\"#colors\">\n                            <span class=\"icon\"><span class=\"mif-paint\"></span></span>\n                            <span class=\"caption\">Colors</span>\n                        </a>\n                    </li>\n                    <li><a href=\"#typography\">\n                        <span class=\"icon\"><span class=\"mif-bold\"></span></span>\n                        <span class=\"caption\">Typography</span>\n                    </a></li>\n                    <li><a href=\"#buttons\">\n                        <span class=\"icon\"><span class=\"mif-apps\"></span></span>\n                        <span class=\"caption\">Buttons</span>\n                    </a></li>\n                    <li><a href=\"#tabs\">\n                        <span class=\"icon\"><span class=\"mif-open-book\"></span></span>\n                        <span class=\"caption\">Accordion &amp; Tabs</span>\n                    </a></li>\n                    <li><a href=\"#tiles\">\n                        <span class=\"icon\"><span class=\"mif-dashboard\"></span></span>\n                        <span class=\"caption\">Tiles</span>\n                    </a></li>\n                    <li><a href=\"#treeview\">\n                        <span class=\"icon\"><span class=\"mif-tree\"></span></span>\n                        <span class=\"caption\">TreeView</span>\n                    </a></li>\n                    <li><a href=\"#listview\">\n                        <span class=\"icon\"><span class=\"mif-list\"></span></span>\n                        <span class=\"caption\">ListView</span>\n                    </a></li>\n                    <li><a href=\"#progress\">\n                        <span class=\"icon\"><span class=\"mif-spinner5\"></span></span>\n                        <span class=\"caption\">Progress &amp; activities</span>\n                    </a></li>\n                    <li><a href=\"#list\">\n                        <span class=\"icon\"><span class=\"mif-list2\"></span></span>\n                        <span class=\"caption\">List component</span>\n                    </a></li>\n                    <li><a href=\"#splitter\">\n                        <span class=\"icon\"><span class=\"mif-table\"></span></span>\n                        <span class=\"caption\">Splitter</span>\n                    </a></li>\n                    <li><a href=\"#calendar\">\n                        <span class=\"icon\"><span class=\"mif-calendar\"></span></span>\n                        <span class=\"caption\">Calendar</span>\n                    </a></li>\n                    <li><a href=\"#countdown\">\n                        <span class=\"icon\"><span class=\"mif-watch\"></span></span>\n                        <span class=\"caption\">Countdown</span>\n                    </a></li>\n                </ul>\n            </li>\n\n            <li>\n                <a href=\"#\" class=\"dropdown-toggle\">\n                    <span class=\"icon\"><span class=\"mif-play\"></span></span>\n                    <span class=\"caption\">Media</span>\n                </a>\n                <ul class=\"navview-menu stay-open\" data-role=\"dropdown\" data-role-dropdown=\"true\" style=\"display: none;\">\n                    <li class=\"item-header\">Media</li>\n                    <li><a href=\"#video\">\n                        <span class=\"icon\"><span class=\"mif-spinner2\"></span></span>\n                        <span class=\"caption\">Video player</span>\n                    </a></li>\n                    <li><a href=\"#audio\">\n                        <span class=\"icon\"><span class=\"mif-spinner2\"></span></span>\n                        <span class=\"caption\">Audio</span>\n                    </a></li>\n                </ul>\n            </li>\n\n            <li>\n                <a href=\"#\" class=\"dropdown-toggle\">\n                    <span class=\"icon\"><span class=\"mif-comment\"></span></span>\n                    <span class=\"caption\">Information</span>\n                </a>\n                <ul class=\"navview-menu stay-open\" data-role=\"dropdown\" data-role-dropdown=\"true\" style=\"display: none;\">\n                    <li class=\"item-header\">Information</li>\n                    <li><a href=\"#windows\">\n                        <span class=\"icon\"><span class=\"mif-spinner2\"></span></span>\n                        <span class=\"caption\">Windows</span>\n                    </a></li>\n                    <li><a href=\"#dialogs\">\n                        <span class=\"icon\"><span class=\"mif-spinner2\"></span></span>\n                        <span class=\"caption\">Dialogs</span>\n                    </a></li>\n                    <li><a href=\"#info-boxes\">\n                        <span class=\"icon\"><span class=\"mif-spinner2\"></span></span>\n                        <span class=\"caption\">InfoBox</span>\n                    </a></li>\n                    <li><a href=\"#hints\">\n                        <span class=\"icon\"><span class=\"mif-spinner2\"></span></span>\n                        <span class=\"caption\">Hints</span>\n                    </a></li>\n                </ul>\n            </li>\n\n            <li>\n                <a href=\"#\" class=\"dropdown-toggle\">\n                    <span class=\"icon\"><span class=\"mif-envelop\"></span></span>\n                    <span class=\"caption\">Mailbox</span>\n                    <span class=\"badges ml-auto mr-3\">\n                        <span class=\"badge inline bg-cyan fg-white\">17</span>\n                        <span class=\"badge inline bg-red fg-white\">7</span>\n                        <span class=\"badge inline bg-green fg-white\">4</span>\n                        <span class=\"badge inline bg-orange fg-white\">3</span>\n                    </span>\n                </a>\n                <ul class=\"navview-menu stay-open\" data-role=\"dropdown\" data-role-dropdown=\"true\" style=\"display: none;\">\n                    <li class=\"item-header\">Mailbox</li>\n                    <li>\n                        <a href=\"#inbox\">\n                            <span class=\"icon\"><span class=\"mif-mail\"></span></span>\n                            <span class=\"caption\">Inbox</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a href=\"#inbox2\">\n                            <span class=\"icon\"><span class=\"mif-mail\"></span></span>\n                            <span class=\"caption\">Inbox2</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a href=\"#compose\">\n                            <span class=\"icon\"><span class=\"mif-mail-read\"></span></span>\n                            <span class=\"caption\">Compose</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a href=\"#read-email\">\n                            <span class=\"icon\"><span class=\"mif-mail-read\"></span></span>\n                            <span class=\"caption\">Read email</span>\n                        </a>\n                    </li>\n                </ul>\n            </li>\n\n            <li>\n                <a href=\"#chat\">\n                    <span class=\"icon\"><span class=\"mif-bubbles\"></span></span>\n                    <span class=\"caption\">Chat</span>\n                    <span class=\"badges ml-auto mr-3\">\n                        <span class=\"badge inline bg-red fg-white\">7</span>\n                        <span class=\"badge inline bg-green fg-white\">4</span>\n                        <span class=\"badge inline bg-orange fg-white\">3</span>\n                    </span>\n                </a>\n            </li>\n\n            <li>\n                <a href=\"#\" class=\"dropdown-toggle\">\n                    <span class=\"icon\"><span class=\"mif-magic-wand\"></span></span>\n                    <span class=\"caption\">Wizards</span>\n                </a>\n                <ul class=\"navview-menu stay-open\" data-role=\"dropdown\" data-role-dropdown=\"true\" style=\"display: none;\">\n                    <li class=\"item-header\">Wizards</li>\n                    <li><a href=\"#master\">\n                        <span class=\"icon\"><span class=\"mif-spinner2\"></span></span>\n                        <span class=\"caption\">Master</span>\n                    </a></li>\n                    <li><a href=\"#wizard\">\n                        <span class=\"icon\"><span class=\"mif-spinner2\"></span></span>\n                        <span class=\"caption\">Wizard</span>\n                    </a></li>\n                </ul>\n            </li>\n\n            <li class=\"item-header\">Documentation</li>\n            <li>\n                <a href=\"https://metroui.org.ua/intro.html\">\n                    <span class=\"icon\"><span class=\"mif-brightness-auto fg-red\"></span></span>\n                    <span class=\"caption\">Metro 4</span>\n                </a>\n            </li>\n        </ul>\n\n        <div class=\"w-100 text-center text-small data-box p-2 border-top bd-grayMouse\" style=\"position: absolute; bottom: 0\">\n            <div>© 2019 <a href=\"mailto:sergey@pimenov.com.ua\" class=\"text-muted fg-white-hover no-decor\">Sergey Pimenov</a></div>\n            <div>Created with <a href=\"https://metroui.org.ua\" class=\"text-muted fg-white-hover no-decor\">Metro 4</a></div>\n        </div>\n    </div>\n\n    <div class=\"navview-content h-100\">\n       <AppBar on:addorder=\"{(e) =>{displayOrder = e.detail;}}\" on:adduser=\"{(e) =>{displayCustomer = e.detail;}}\" />\n\n        <div id=\"content-wrapper\" class=\"content-inner h-100\" style=\"overflow-y: auto\"><div class=\"row border-bottom bd-lightGray m-3\">\n            <div class=\"cell-md-4 text-center text-left-md\">\n                <h3 class=\"dashboard-section-title\">{title} <small>Version 1.0</small></h3>\n            </div>\n\n    <div class=\"cell-md-8 d-flex flex-justify-center flex-justify-end-md\">\n        <ul class=\"breadcrumbs bg-transparent\">\n            <li class=\"page-item\"><a href=\"#\" class=\"page-link\"><span class=\"mif-meter\"></span></a></li>\n            <li class=\"page-item\"><a href=\"#\" class=\"page-link\">Dashboard</a></li>\n        </ul>\n    </div>\n</div>\n\n<div class=\"m-3\">\n    <div class=\"row mt-2\">\n    \n    </div>\n\n<div class=\"row\">\n    <div class=\"cell\">\n        <TotalOrders bind:this={totalOrders} />\n    </div>\n    <div class=\"cell\">\n        <TotalCustomers bind:this={totalCustomers} />\n    </div>\n</div>\n\n\n\n\n    <CustomerOrders on:refresh={handleRefresh} bind:this={customer} title=\"Customer/Orders\" />\n\n</div>\n</div>\n    </div>\n</div>\n\n{#if displayCustomer}\n     <AddUser on:refresh={handleRefresh} on:close=\"{(e)=>{displayCustomer = e.detail;}}\" />\n{/if}\n{#if displayOrder}\n    <AddOrders on:refresh={handleRefresh} on:close=\"{(e)=>{displayOrder = e.detail;}}\" />\n{/if}","import App from './App.svelte'\n\nconst app = new App({\n  target: document.body,\n  props: {\n    name: 'world',\n  },\n})\n\nexport default app\n\n// recreate the whole app if an HMR update touches this module\nif (import.meta.hot) {\n  import.meta.hot.dispose(() => {\n    app.$destroy()\n  })\n  import.meta.hot.accept()\n}\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","option","__value","selected","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","slice","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","l","Array","from","childNodes","children","intro","SvelteComponent","[object Object]","$destroy","index","indexOf","splice","total","download","response","fetch","results","json","console","log","dispatch","orders","removeOrder","form","FormData","method","body","customers","records","user","table","title","srcElement","keyCode","toLowerCase","nwresults","customer","includes","setCustomers","refresh","fname","mname","lname","em","dob","address","formatDate","changeTab","date","Date","getFullYear","getMonth","getDate","docid","hash","replace","getElementById","li","querySelectorAll","ele","tagName","display","classList","remove","ordername","ordertotal","cus_id","orderdate","keeptrack","JSON","stringify","customerid","selected_option","querySelector","totalOrders","totalCustomers","displayCustomer","displayOrder","app","module","hot","dispose","accept"],"mappings":"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"}